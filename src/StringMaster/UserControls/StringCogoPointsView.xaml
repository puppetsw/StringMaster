<UserControl
    x:Class="StringMaster.UserControls.StringCogoPointsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:StringMaster.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:StringMaster.Models"
    x:Name="UserControl"
    d:DataContext="{d:DesignData StringCogoPointsViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="{DynamicResource DarkBackground}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/Brushes.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/ToolTips.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/ToolBar.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/ComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style TargetType="Image">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="16" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel Margin="8,0,0,0">
        <Grid DockPanel.Dock="Top">
            <ToolBar Background="{StaticResource DarkBackground}" Style="{DynamicResource ToolBarStyle}">
                <ToolBar.Resources>
                    <Style x:Key="ImageEnabled" TargetType="Image">
                        <Setter Property="Width" Value="16" />
                        <Setter Property="Height" Value="16" />
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.25" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToolBar.Resources>
                <Button Command="{Binding NewDescriptionKeyFileCommand}">
                    <Image Source="{StaticResource NewToolBarIcon}" />
                </Button>
                <Button Command="{Binding OpenDescriptionKeyFileCommand}">
                    <Button.ToolTip>
                        <ToolTip ContentTemplate="{StaticResource OpenDocumentToolTipContent}" />
                    </Button.ToolTip>
                    <Image Source="{StaticResource OpenToolBarIcon}" />
                </Button>
                <Button Command="{Binding SaveDescriptionKeyFileCommand}">
                    <Image Source="{StaticResource SaveToolBarIcon}" Style="{StaticResource ImageEnabled}" />
                </Button>
                <Button Command="{Binding SaveAsDescriptionKeyFileCommand}">
                    <Button.ToolTip>
                        <ToolTip ContentTemplate="{StaticResource SaveDocumentToolTipContent}" />
                    </Button.ToolTip>
                    <Image Source="{StaticResource SaveAsToolBarIcon}" Style="{StaticResource ImageEnabled}" />
                </Button>
                <Button Command="{Binding AddRowCommand}">
                    <Button.ToolTip>
                        <ToolTip ContentTemplate="{StaticResource AddRowToolTipContent}" />
                    </Button.ToolTip>
                    <Image Source="{StaticResource AddToolBarIcon}" />
                </Button>
                <Button Command="{Binding RemoveRowCommand}">
                    <Button.ToolTip>
                        <ToolTip ContentTemplate="{StaticResource RemoveRowToolTipContent}" />
                    </Button.ToolTip>
                    <Image Source="{StaticResource RemoveToolBarIcon}" />
                </Button>
                <Button Command="{Binding StringCommand}">
                    <Button.ToolTip>
                        <ToolTip ContentTemplate="{StaticResource StringCogoPointsToolTipContent}" />
                    </Button.ToolTip>
                    <Image Source="{StaticResource ExecuteToolBarIcon}" />
                </Button>
            </ToolBar>
            <ToolBar
                HorizontalAlignment="Right"
                Background="{StaticResource DarkBackground}"
                Style="{DynamicResource ToolBarStyle}">
                <Button Click="DismissPalette_Click" Style="{StaticResource ToolBarButton}">
                    <Border
                        Width="16"
                        Height="16"
                        Background="{StaticResource TickButtonBackground}"
                        BorderBrush="Gray"
                        BorderThickness="1">
                        <Image
                            Width="12"
                            Height="12"
                            Source="{StaticResource TickToolBarIcon}"
                            Stretch="Uniform" />
                    </Border>
                </Button>
                <Button Margin="3,0,0,0" Style="{StaticResource ToolBarButton}">
                    <Image Source="{StaticResource HelpToolBarIcon}" />
                </Button>
            </ToolBar>
        </Grid>
        <DataGrid
            x:Name="DataGrid"
            HorizontalContentAlignment="Center"
            AutoGenerateColumns="False"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"
            CanUserSortColumns="False"
            CellStyle="{StaticResource DataGridCellCenter}"
            ColumnHeaderStyle="{StaticResource DataGridHeader}"
            CurrentItem="{Binding SelectedKey, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            HorizontalGridLinesBrush="{StaticResource BlueGridLine}"
            ItemsSource="{Binding DescriptionKeys, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            RowHeaderWidth="0"
            RowHeight="20"
            SelectionMode="Single"
            SelectionUnit="FullRow"
            VerticalGridLinesBrush="{StaticResource RedGridLine}">
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="150" Header="{helpers:ResourceHelper Name=ColumnHeaderKey}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="models:DescriptionKey">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Image
                                    Width="16"
                                    Height="16"
                                    Source="{StaticResource KeyIcon}"
                                    Stretch="Uniform" />
                                <TextBlock Grid.Column="1" Text="{Binding Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate DataType="models:DescriptionKey">
                            <TextBox Text="{Binding Key, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="200" Header="{helpers:ResourceHelper Name=ColumnHeaderLayer}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="models:DescriptionKey">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                </Grid.ColumnDefinitions>
                                <Grid.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.LayerSelectCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" Gesture="LeftDoubleClick" />
                                </Grid.InputBindings>
                                <CheckBox
                                    Grid.Column="0"
                                    Margin="0,0,6,0"
                                    IsChecked="{Binding AcadLayer.IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock Grid.Column="1" Text="{Binding AcadLayer.Name}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn
                    Width="100"
                    Binding="{Binding Draw2D, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Header="{helpers:ResourceHelper Name=ColumnHeader2D}" />
                <DataGridCheckBoxColumn
                    Width="100"
                    Binding="{Binding Draw3D, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Header="{helpers:ResourceHelper Name=ColumnHeader3D}" />
                <DataGridCheckBoxColumn
                    Width="100"
                    Binding="{Binding DrawFeatureLine, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Header="{helpers:ResourceHelper Name=ColumnHeaderFeatureLine}" />
                <DataGridTextColumn
                    Width="100"
                    Binding="{Binding MidOrdinate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0.01}"
                    Header="{helpers:ResourceHelper Name=ColumnHeaderMidOrdinate}" />
                <!--<DataGridTemplateColumn Width="120" Header="{helpers:ResourceHelper Name=ColumnHeaderColor}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="models:DescriptionKey">
                            <ComboBox
                                x:Name="ComboBox"
                                Height="21"
                                HorizontalAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                Background="Transparent"
                                ItemsSource="{Binding ColorPicker.Colors, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                SelectedItem="{Binding AcadColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectionChanged="ComboBox_OnSelectionChanged"
                                Style="{StaticResource ComboBoxFlatStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="models:AcadColor">
                                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                            <Label
                                                Width="15"
                                                Height="15"
                                                Margin="0,0,3,0"
                                                Background="{Binding ColorBrush}"
                                                BorderBrush="Black"
                                                BorderThickness="1"
                                                Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            <TextBlock Text="{Binding Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>
