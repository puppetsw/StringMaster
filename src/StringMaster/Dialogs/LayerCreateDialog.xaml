<Window
    x:Class="StringMaster.Dialogs.LayerCreateDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:StringMaster.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:StringMaster.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:StringMaster.Models"
    xmlns:viewModels="clr-namespace:StringMaster.ViewModels"
    Title="Create Layer"
    Width="435"
    Height="300"
    MinWidth="435"
    MinHeight="300"
    d:DataContext="{d:DesignInstance viewModels:LayerCreateDialogViewModel}"
    d:DesignHeight="300"
    d:DesignWidth="435"
    Background="#F0F0F0"
    ResizeMode="CanResizeWithGrip"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/FlatComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/DataGrid.xaml" />
                <ResourceDictionary Source="pack://application:,,,/StringMaster;component/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:BooleanYesNoConverter x:Key="BooleanYesNoConverter" />
            <Style x:Key="DataGridValue" TargetType="TextBlock">
                <Setter Property="Margin" Value="5,0,0,0" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="8,8,8,0">
        <Grid.Resources>

            <!--  Layer Name  -->
            <DataTemplate x:Key="LayerNameTemplate" DataType="{x:Type models:LayerNameProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.LayerName, RelativeSource={RelativeSource AncestorType=Window}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerNameEditTemplate" DataType="{x:Type models:LayerNameProperty}">
                <TextBox Text="{Binding DataContext.LayerName, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </DataTemplate>

            <!--  AcadColor  -->
            <DataTemplate x:Key="LayerColorTemplate">
                <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                    <Label
                        Width="15"
                        Height="14"
                        Margin="0,0,8,0"
                        Background="{Binding DataContext.AcadColor.ColorBrush, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}"
                        BorderBrush="Black"
                        BorderThickness="1" />
                    <TextBlock Text="{Binding DataContext.AcadColor.NameStringLower, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="LayerColorEditTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Margin="5,0,0,0" Orientation="Horizontal">
                        <Label
                            Width="15"
                            Height="14"
                            Margin="0,0,8,0"
                            Background="{Binding DataContext.AcadColor.ColorBrush, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}"
                            BorderBrush="Black"
                            BorderThickness="1" />
                        <TextBlock Text="{Binding DataContext.AcadColor.NameStringLower, RelativeSource={RelativeSource AncestorType=Window}, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{Binding DataContext.ShowColorDialogCommand, RelativeSource={RelativeSource AncestorType=Window}}">
                        <Button.Content>
                            <Image
                                Width="16"
                                Height="16"
                                Source="{StaticResource DotsButton}" />
                        </Button.Content>
                    </Button>
                </Grid>
            </DataTemplate>

            <!--  LineType  -->
            <DataTemplate x:Key="LayerLinetypeTemplate" DataType="{x:Type models:LayerLinetypeProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.Linetype, RelativeSource={RelativeSource AncestorType=Window}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerLinetypeEditTemplate" DataType="{x:Type models:LayerLinetypeProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.Linetype, RelativeSource={RelativeSource AncestorType=Window}}" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{Binding DataContext.ShowLinetypeDialogCommand, RelativeSource={RelativeSource AncestorType=Window}}">
                        <Button.Content>
                            <Image
                                Width="16"
                                Height="16"
                                Source="{StaticResource DotsButton}" />
                        </Button.Content>
                    </Button>
                </Grid>
            </DataTemplate>

            <!--  LineWeight  -->
            <DataTemplate x:Key="LayerLineweightTemplate" DataType="{x:Type models:LayerLineweightProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.Lineweight, RelativeSource={RelativeSource AncestorType=Window}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerLineweightEditTemplate" DataType="{x:Type models:LayerLineweightProperty}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.Lineweight, RelativeSource={RelativeSource AncestorType=Window}}" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{Binding DataContext.ShowLineweightDialogCommand, RelativeSource={RelativeSource AncestorType=Window}}">
                        <Button.Content>
                            <Image
                                Width="16"
                                Height="16"
                                Source="{StaticResource DotsButton}" />
                        </Button.Content>
                    </Button>
                </Grid>
            </DataTemplate>

            <!--  IsOn  -->
            <DataTemplate x:Key="LayerOnTemplate" DataType="{x:Type models:LayerOnProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.IsOn, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BooleanYesNoConverter}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerOnEditTemplate" DataType="{x:Type models:LayerOnProperty}">
                <ComboBox
                    ItemsSource="{Binding DataContext.YesNoSelect, RelativeSource={RelativeSource AncestorType=Window}}"
                    SelectedItem="{Binding DataContext.IsOn, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay, Converter={StaticResource BooleanYesNoConverter}}"
                    Style="{StaticResource ComboBoxFlatStyle}" />
            </DataTemplate>

            <!--  IsLocked  -->
            <DataTemplate x:Key="LayerLockedTemplate" DataType="{x:Type models:LayerLockedProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.IsLocked, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BooleanYesNoConverter}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerLockedEditTemplate" DataType="{x:Type models:LayerLockedProperty}">
                <ComboBox
                    ItemsSource="{Binding DataContext.YesNoSelect, RelativeSource={RelativeSource AncestorType=Window}}"
                    SelectedItem="{Binding DataContext.IsLocked, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay, Converter={StaticResource BooleanYesNoConverter}}"
                    Style="{StaticResource ComboBoxFlatStyle}" />
            </DataTemplate>

            <!--  IsFrozen  -->
            <DataTemplate x:Key="LayerFrozenTemplate" DataType="{x:Type models:LayerFrozenProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.IsFrozen, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BooleanYesNoConverter}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerFrozenEditTemplate" DataType="{x:Type models:LayerFrozenProperty}">
                <ComboBox
                    ItemsSource="{Binding DataContext.YesNoSelect, RelativeSource={RelativeSource AncestorType=Window}}"
                    SelectedItem="{Binding DataContext.IsFrozen, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay, Converter={StaticResource BooleanYesNoConverter}}"
                    Style="{StaticResource ComboBoxFlatStyle}" />
            </DataTemplate>

            <!--  PlotStyle  -->
            <DataTemplate x:Key="LayerPlotStyleTemplate" DataType="{x:Type models:LayerPlotStyleProperty}">
                <TextBlock Text="" />
            </DataTemplate>

            <!--  IsPlottable  -->
            <DataTemplate x:Key="LayerPlottableTemplate" DataType="{x:Type models:LayerPlotProperty}">
                <TextBlock Style="{StaticResource DataGridValue}" Text="{Binding DataContext.IsPlottable, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BooleanYesNoConverter}}" />
            </DataTemplate>
            <DataTemplate x:Key="LayerPlottableEditTemplate" DataType="{x:Type models:LayerPlotProperty}">
                <ComboBox
                    ItemsSource="{Binding DataContext.YesNoSelect, RelativeSource={RelativeSource AncestorType=Window}}"
                    SelectedItem="{Binding DataContext.IsPlottable, RelativeSource={RelativeSource AncestorType=Window}, Mode=TwoWay, Converter={StaticResource BooleanYesNoConverter}}"
                    Style="{StaticResource ComboBoxFlatStyle}" />
            </DataTemplate>

            <helpers:LayerPropertiesTemplateSelector
                x:Key="PropertyTemplateSelector"
                LayerColorTemplate="{StaticResource LayerColorTemplate}"
                LayerFreezeTemplate="{StaticResource LayerFrozenTemplate}"
                LayerLinetypeTemplate="{StaticResource LayerLinetypeTemplate}"
                LayerLineweightTemplate="{StaticResource LayerLineweightTemplate}"
                LayerLockedTemplate="{StaticResource LayerLockedTemplate}"
                LayerNameTemplate="{StaticResource LayerNameTemplate}"
                LayerOnTemplate="{StaticResource LayerOnTemplate}"
                LayerPlotStyleTemplate="{StaticResource LayerPlotStyleTemplate}"
                LayerPlotTemplate="{StaticResource LayerPlottableTemplate}" />
            <helpers:LayerPropertiesTemplateSelector
                x:Key="PropertyEditTemplateSelector"
                LayerColorTemplate="{StaticResource LayerColorEditTemplate}"
                LayerFreezeTemplate="{StaticResource LayerFrozenEditTemplate}"
                LayerLinetypeTemplate="{StaticResource LayerLinetypeEditTemplate}"
                LayerLineweightTemplate="{StaticResource LayerLineweightEditTemplate}"
                LayerLockedTemplate="{StaticResource LayerLockedEditTemplate}"
                LayerNameTemplate="{StaticResource LayerNameEditTemplate}"
                LayerOnTemplate="{StaticResource LayerOnEditTemplate}"
                LayerPlotTemplate="{StaticResource LayerPlottableEditTemplate}" />
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <DataGrid
            Grid.ColumnSpan="2"
            AutoGenerateColumns="False"
            Background="#F5F5F5"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"
            CanUserResizeRows="False"
            CanUserSortColumns="False"
            HorizontalGridLinesBrush="#E3E3E3"
            ItemsSource="{Binding Properties}"
            RowHeaderWidth="0"
            RowHeight="20"
            SelectionMode="Single"
            SelectionUnit="Cell"
            VerticalGridLinesBrush="#E3E3E3">
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Setter Property="Margin" Value="0" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="1*"
                    Binding="{Binding Name}"
                    Header="Property"
                    IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                    <Setter Property="Foreground" Value="#989898" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn
                    Width="*"
                    CellEditingTemplateSelector="{StaticResource PropertyEditTemplateSelector}"
                    CellTemplateSelector="{StaticResource PropertyTemplateSelector}"
                    Header="Values" />
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            Margin="0,13"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Width="76"
                Height="21"
                Margin="8,0,8,0"
                Click="ButtonOK_Click"
                Content="OK" />
            <Button
                Width="76"
                Height="21"
                Click="ButtonCancel_Click"
                Content="Cancel" />
        </StackPanel>
    </Grid>
</Window>
